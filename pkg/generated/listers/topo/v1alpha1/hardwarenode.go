/*
Copyright The Karmada Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	topov1alpha1 "github.com/karmada-io/karmada/pkg/apis/topo/v1alpha1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// HardwareNodeLister helps list HardwareNodes.
// All objects returned here must be treated as read-only.
type HardwareNodeLister interface {
	// List lists all HardwareNodes in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*topov1alpha1.HardwareNode, err error)
	// Get retrieves the HardwareNode from the index for a given name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*topov1alpha1.HardwareNode, error)
	HardwareNodeListerExpansion
}

// hardwareNodeLister implements the HardwareNodeLister interface.
type hardwareNodeLister struct {
	listers.ResourceIndexer[*topov1alpha1.HardwareNode]
}

// NewHardwareNodeLister returns a new HardwareNodeLister.
func NewHardwareNodeLister(indexer cache.Indexer) HardwareNodeLister {
	return &hardwareNodeLister{listers.New[*topov1alpha1.HardwareNode](indexer, topov1alpha1.Resource("hardwarenode"))}
}
