/*
Copyright The Karmada Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	topov1alpha1 "github.com/karmada-io/karmada/pkg/apis/topo/v1alpha1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// TrafficLister helps list Traffics.
// All objects returned here must be treated as read-only.
type TrafficLister interface {
	// List lists all Traffics in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*topov1alpha1.Traffic, err error)
	// Get retrieves the Traffic from the index for a given name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*topov1alpha1.Traffic, error)
	TrafficListerExpansion
}

// trafficLister implements the TrafficLister interface.
type trafficLister struct {
	listers.ResourceIndexer[*topov1alpha1.Traffic]
}

// NewTrafficLister returns a new TrafficLister.
func NewTrafficLister(indexer cache.Indexer) TrafficLister {
	return &trafficLister{listers.New[*topov1alpha1.Traffic](indexer, topov1alpha1.Resource("traffic"))}
}
