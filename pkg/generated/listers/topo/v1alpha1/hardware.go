/*
Copyright The Karmada Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	topov1alpha1 "github.com/karmada-io/karmada/pkg/apis/topo/v1alpha1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// HardwareLister helps list Hardwares.
// All objects returned here must be treated as read-only.
type HardwareLister interface {
	// List lists all Hardwares in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*topov1alpha1.Hardware, err error)
	// Hardwares returns an object that can list and get Hardwares.
	Hardwares(namespace string) HardwareNamespaceLister
	HardwareListerExpansion
}

// hardwareLister implements the HardwareLister interface.
type hardwareLister struct {
	listers.ResourceIndexer[*topov1alpha1.Hardware]
}

// NewHardwareLister returns a new HardwareLister.
func NewHardwareLister(indexer cache.Indexer) HardwareLister {
	return &hardwareLister{listers.New[*topov1alpha1.Hardware](indexer, topov1alpha1.Resource("hardware"))}
}

// Hardwares returns an object that can list and get Hardwares.
func (s *hardwareLister) Hardwares(namespace string) HardwareNamespaceLister {
	return hardwareNamespaceLister{listers.NewNamespaced[*topov1alpha1.Hardware](s.ResourceIndexer, namespace)}
}

// HardwareNamespaceLister helps list and get Hardwares.
// All objects returned here must be treated as read-only.
type HardwareNamespaceLister interface {
	// List lists all Hardwares in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*topov1alpha1.Hardware, err error)
	// Get retrieves the Hardware from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*topov1alpha1.Hardware, error)
	HardwareNamespaceListerExpansion
}

// hardwareNamespaceLister implements the HardwareNamespaceLister
// interface.
type hardwareNamespaceLister struct {
	listers.ResourceIndexer[*topov1alpha1.Hardware]
}
