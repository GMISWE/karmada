//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright The Karmada Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	v1 "k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendConfig) DeepCopyInto(out *BackendConfig) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendConfig.
func (in *BackendConfig) DeepCopy() *BackendConfig {
	if in == nil {
		return nil
	}
	out := new(BackendConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommunityEdition) DeepCopyInto(out *CommunityEdition) {
	*out = *in
	out.Backend = in.Backend
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommunityEdition.
func (in *CommunityEdition) DeepCopy() *CommunityEdition {
	if in == nil {
		return nil
	}
	out := new(CommunityEdition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnterpriseAuth) DeepCopyInto(out *EnterpriseAuth) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnterpriseAuth.
func (in *EnterpriseAuth) DeepCopy() *EnterpriseAuth {
	if in == nil {
		return nil
	}
	out := new(EnterpriseAuth)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnterpriseEdition) DeepCopyInto(out *EnterpriseEdition) {
	*out = *in
	out.Auth = in.Auth
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnterpriseEdition.
func (in *EnterpriseEdition) DeepCopy() *EnterpriseEdition {
	if in == nil {
		return nil
	}
	out := new(EnterpriseEdition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Juicefs) DeepCopyInto(out *Juicefs) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Juicefs.
func (in *Juicefs) DeepCopy() *Juicefs {
	if in == nil {
		return nil
	}
	out := new(Juicefs)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Juicefs) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JuicefsClient) DeepCopyInto(out *JuicefsClient) {
	*out = *in
	if in.MountOptions != nil {
		in, out := &in.MountOptions, &out.MountOptions
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Envs != nil {
		in, out := &in.Envs, &out.Envs
		*out = make([]v1.EnvVar, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]v1.Volume, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VolumeMounts != nil {
		in, out := &in.VolumeMounts, &out.VolumeMounts
		*out = make([]v1.VolumeMount, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.Resources.DeepCopyInto(&out.Resources)
	if in.EE != nil {
		in, out := &in.EE, &out.EE
		*out = new(EnterpriseEdition)
		**out = **in
	}
	if in.CE != nil {
		in, out := &in.CE, &out.CE
		*out = new(CommunityEdition)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JuicefsClient.
func (in *JuicefsClient) DeepCopy() *JuicefsClient {
	if in == nil {
		return nil
	}
	out := new(JuicefsClient)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JuicefsList) DeepCopyInto(out *JuicefsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Juicefs, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JuicefsList.
func (in *JuicefsList) DeepCopy() *JuicefsList {
	if in == nil {
		return nil
	}
	out := new(JuicefsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *JuicefsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JuicefsSpec) DeepCopyInto(out *JuicefsSpec) {
	*out = *in
	out.Location = in.Location
	out.Provider = in.Provider
	in.Client.DeepCopyInto(&out.Client)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JuicefsSpec.
func (in *JuicefsSpec) DeepCopy() *JuicefsSpec {
	if in == nil {
		return nil
	}
	out := new(JuicefsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JuicefsStatus) DeepCopyInto(out *JuicefsStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]metav1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.MountInfo.DeepCopyInto(&out.MountInfo)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JuicefsStatus.
func (in *JuicefsStatus) DeepCopy() *JuicefsStatus {
	if in == nil {
		return nil
	}
	out := new(JuicefsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Location) DeepCopyInto(out *Location) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Location.
func (in *Location) DeepCopy() *Location {
	if in == nil {
		return nil
	}
	out := new(Location)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MountInfo) DeepCopyInto(out *MountInfo) {
	*out = *in
	if in.MountedNodes != nil {
		in, out := &in.MountedNodes, &out.MountedNodes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	in.LastMounted.DeepCopyInto(&out.LastMounted)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MountInfo.
func (in *MountInfo) DeepCopy() *MountInfo {
	if in == nil {
		return nil
	}
	out := new(MountInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Provider) DeepCopyInto(out *Provider) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Provider.
func (in *Provider) DeepCopy() *Provider {
	if in == nil {
		return nil
	}
	out := new(Provider)
	in.DeepCopyInto(out)
	return out
}
